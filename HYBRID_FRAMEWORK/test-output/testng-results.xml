<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="1" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[******db connection successful******]]>
    </line>
    <line>
      <![CDATA[******connnection closed******]]>
    </line>
  </reporter-output>
  <suite started-at="2022-09-30T10:37:30 IST" name="Default suite" finished-at="2022-09-30T10:37:32 IST" duration-ms="1835">
    <groups>
    </groups>
    <test started-at="2022-09-30T10:37:30 IST" name="Default test" finished-at="2022-09-30T10:37:32 IST" duration-ms="1835">
      <class name="End2EndScenario.CreateProjectAndVerifyInDB">
        <test-method is-config="true" signature="bsConfig()[pri:0, instance:End2EndScenario.CreateProjectAndVerifyInDB@7205765b]" started-at="2022-09-30T10:37:29 IST" name="bsConfig" finished-at="2022-09-30T10:37:30 IST" duration-ms="919" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[******db connection successful******]]>
            </line>
          </reporter-output>
        </test-method> <!-- bsConfig -->
        <test-method signature="createProject()[pri:0, instance:End2EndScenario.CreateProjectAndVerifyInDB@7205765b]" started-at="2022-09-30T10:37:30 IST" name="createProject" finished-at="2022-09-30T10:37:32 IST" duration-ms="1809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProject -->
        <test-method is-config="true" signature="asConfig()[pri:0, instance:End2EndScenario.CreateProjectAndVerifyInDB@7205765b]" started-at="2022-09-30T10:37:32 IST" name="asConfig" finished-at="2022-09-30T10:37:32 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[LogDetail cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: LogDetail cannot be null
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:21)
at io.restassured.builder.ResponseSpecBuilder.log(ResponseSpecBuilder.java:604)
at GenericLibraries.BaseAPIClassWithSpecBuilders.asConfig(BaseAPIClassWithSpecBuilders.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:344)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
            <line>
              <![CDATA[******connnection closed******]]>
            </line>
          </reporter-output>
        </test-method> <!-- asConfig -->
      </class> <!-- End2EndScenario.CreateProjectAndVerifyInDB -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
